/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as AuthImport } from './routes/_auth'
import { Route as IndexImport } from './routes/index'
import { Route as AuthWaybillTrackingImport } from './routes/_auth/waybill-tracking'

// Create Virtual Routes

const ResetPasswordLazyImport = createFileRoute('/reset-password')()
const ForgotPasswordLazyImport = createFileRoute('/forgot-password')()
const AuthOrderMgtLazyImport = createFileRoute('/_auth/order-mgt')()
const AuthFinancialInfoLazyImport = createFileRoute('/_auth/financial-info')()
const AuthDataDashboardLazyImport = createFileRoute('/_auth/data-dashboard')()
const AuthAddressBookLazyImport = createFileRoute('/_auth/address-book')()

// Create/Update Routes

const ResetPasswordLazyRoute = ResetPasswordLazyImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/reset-password.lazy').then((d) => d.Route),
)

const ForgotPasswordLazyRoute = ForgotPasswordLazyImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/forgot-password.lazy').then((d) => d.Route),
)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthOrderMgtLazyRoute = AuthOrderMgtLazyImport.update({
  id: '/order-mgt',
  path: '/order-mgt',
  getParentRoute: () => AuthRoute,
} as any).lazy(() =>
  import('./routes/_auth/order-mgt.lazy').then((d) => d.Route),
)

const AuthFinancialInfoLazyRoute = AuthFinancialInfoLazyImport.update({
  id: '/financial-info',
  path: '/financial-info',
  getParentRoute: () => AuthRoute,
} as any).lazy(() =>
  import('./routes/_auth/financial-info.lazy').then((d) => d.Route),
)

const AuthDataDashboardLazyRoute = AuthDataDashboardLazyImport.update({
  id: '/data-dashboard',
  path: '/data-dashboard',
  getParentRoute: () => AuthRoute,
} as any).lazy(() =>
  import('./routes/_auth/data-dashboard.lazy').then((d) => d.Route),
)

const AuthAddressBookLazyRoute = AuthAddressBookLazyImport.update({
  id: '/address-book',
  path: '/address-book',
  getParentRoute: () => AuthRoute,
} as any).lazy(() =>
  import('./routes/_auth/address-book.lazy').then((d) => d.Route),
)

const AuthWaybillTrackingRoute = AuthWaybillTrackingImport.update({
  id: '/waybill-tracking',
  path: '/waybill-tracking',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/forgot-password': {
      id: '/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof ForgotPasswordLazyImport
      parentRoute: typeof rootRoute
    }
    '/reset-password': {
      id: '/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof ResetPasswordLazyImport
      parentRoute: typeof rootRoute
    }
    '/_auth/waybill-tracking': {
      id: '/_auth/waybill-tracking'
      path: '/waybill-tracking'
      fullPath: '/waybill-tracking'
      preLoaderRoute: typeof AuthWaybillTrackingImport
      parentRoute: typeof AuthImport
    }
    '/_auth/address-book': {
      id: '/_auth/address-book'
      path: '/address-book'
      fullPath: '/address-book'
      preLoaderRoute: typeof AuthAddressBookLazyImport
      parentRoute: typeof AuthImport
    }
    '/_auth/data-dashboard': {
      id: '/_auth/data-dashboard'
      path: '/data-dashboard'
      fullPath: '/data-dashboard'
      preLoaderRoute: typeof AuthDataDashboardLazyImport
      parentRoute: typeof AuthImport
    }
    '/_auth/financial-info': {
      id: '/_auth/financial-info'
      path: '/financial-info'
      fullPath: '/financial-info'
      preLoaderRoute: typeof AuthFinancialInfoLazyImport
      parentRoute: typeof AuthImport
    }
    '/_auth/order-mgt': {
      id: '/_auth/order-mgt'
      path: '/order-mgt'
      fullPath: '/order-mgt'
      preLoaderRoute: typeof AuthOrderMgtLazyImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthWaybillTrackingRoute: typeof AuthWaybillTrackingRoute
  AuthAddressBookLazyRoute: typeof AuthAddressBookLazyRoute
  AuthDataDashboardLazyRoute: typeof AuthDataDashboardLazyRoute
  AuthFinancialInfoLazyRoute: typeof AuthFinancialInfoLazyRoute
  AuthOrderMgtLazyRoute: typeof AuthOrderMgtLazyRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthWaybillTrackingRoute: AuthWaybillTrackingRoute,
  AuthAddressBookLazyRoute: AuthAddressBookLazyRoute,
  AuthDataDashboardLazyRoute: AuthDataDashboardLazyRoute,
  AuthFinancialInfoLazyRoute: AuthFinancialInfoLazyRoute,
  AuthOrderMgtLazyRoute: AuthOrderMgtLazyRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/forgot-password': typeof ForgotPasswordLazyRoute
  '/reset-password': typeof ResetPasswordLazyRoute
  '/waybill-tracking': typeof AuthWaybillTrackingRoute
  '/address-book': typeof AuthAddressBookLazyRoute
  '/data-dashboard': typeof AuthDataDashboardLazyRoute
  '/financial-info': typeof AuthFinancialInfoLazyRoute
  '/order-mgt': typeof AuthOrderMgtLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/forgot-password': typeof ForgotPasswordLazyRoute
  '/reset-password': typeof ResetPasswordLazyRoute
  '/waybill-tracking': typeof AuthWaybillTrackingRoute
  '/address-book': typeof AuthAddressBookLazyRoute
  '/data-dashboard': typeof AuthDataDashboardLazyRoute
  '/financial-info': typeof AuthFinancialInfoLazyRoute
  '/order-mgt': typeof AuthOrderMgtLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/forgot-password': typeof ForgotPasswordLazyRoute
  '/reset-password': typeof ResetPasswordLazyRoute
  '/_auth/waybill-tracking': typeof AuthWaybillTrackingRoute
  '/_auth/address-book': typeof AuthAddressBookLazyRoute
  '/_auth/data-dashboard': typeof AuthDataDashboardLazyRoute
  '/_auth/financial-info': typeof AuthFinancialInfoLazyRoute
  '/_auth/order-mgt': typeof AuthOrderMgtLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/login'
    | '/forgot-password'
    | '/reset-password'
    | '/waybill-tracking'
    | '/address-book'
    | '/data-dashboard'
    | '/financial-info'
    | '/order-mgt'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/login'
    | '/forgot-password'
    | '/reset-password'
    | '/waybill-tracking'
    | '/address-book'
    | '/data-dashboard'
    | '/financial-info'
    | '/order-mgt'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/login'
    | '/forgot-password'
    | '/reset-password'
    | '/_auth/waybill-tracking'
    | '/_auth/address-book'
    | '/_auth/data-dashboard'
    | '/_auth/financial-info'
    | '/_auth/order-mgt'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  LoginRoute: typeof LoginRoute
  ForgotPasswordLazyRoute: typeof ForgotPasswordLazyRoute
  ResetPasswordLazyRoute: typeof ResetPasswordLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  LoginRoute: LoginRoute,
  ForgotPasswordLazyRoute: ForgotPasswordLazyRoute,
  ResetPasswordLazyRoute: ResetPasswordLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/login",
        "/forgot-password",
        "/reset-password"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/waybill-tracking",
        "/_auth/address-book",
        "/_auth/data-dashboard",
        "/_auth/financial-info",
        "/_auth/order-mgt"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/forgot-password": {
      "filePath": "forgot-password.lazy.tsx"
    },
    "/reset-password": {
      "filePath": "reset-password.lazy.tsx"
    },
    "/_auth/waybill-tracking": {
      "filePath": "_auth/waybill-tracking.tsx",
      "parent": "/_auth"
    },
    "/_auth/address-book": {
      "filePath": "_auth/address-book.lazy.tsx",
      "parent": "/_auth"
    },
    "/_auth/data-dashboard": {
      "filePath": "_auth/data-dashboard.lazy.tsx",
      "parent": "/_auth"
    },
    "/_auth/financial-info": {
      "filePath": "_auth/financial-info.lazy.tsx",
      "parent": "/_auth"
    },
    "/_auth/order-mgt": {
      "filePath": "_auth/order-mgt.lazy.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
