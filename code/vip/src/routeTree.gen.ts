/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WaybillTrackingIndexImport } from './routes/waybill-tracking/index'
import { Route as OrderMgtIndexImport } from './routes/order-mgt/index'
import { Route as FinancialInfoIndexImport } from './routes/financial-info/index'
import { Route as DataDashboardIndexImport } from './routes/data-dashboard/index'
import { Route as AddressBookIndexImport } from './routes/address-book/index'
import { Route as authLoginImport } from './routes/(auth)/login'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()
const authResetPasswdLazyImport = createFileRoute('/(auth)/reset-passwd')()

// Create/Update Routes

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const WaybillTrackingIndexRoute = WaybillTrackingIndexImport.update({
  id: '/waybill-tracking/',
  path: '/waybill-tracking/',
  getParentRoute: () => rootRoute,
} as any)

const OrderMgtIndexRoute = OrderMgtIndexImport.update({
  id: '/order-mgt/',
  path: '/order-mgt/',
  getParentRoute: () => rootRoute,
} as any)

const FinancialInfoIndexRoute = FinancialInfoIndexImport.update({
  id: '/financial-info/',
  path: '/financial-info/',
  getParentRoute: () => rootRoute,
} as any)

const DataDashboardIndexRoute = DataDashboardIndexImport.update({
  id: '/data-dashboard/',
  path: '/data-dashboard/',
  getParentRoute: () => rootRoute,
} as any)

const AddressBookIndexRoute = AddressBookIndexImport.update({
  id: '/address-book/',
  path: '/address-book/',
  getParentRoute: () => rootRoute,
} as any)

const authResetPasswdLazyRoute = authResetPasswdLazyImport
  .update({
    id: '/(auth)/reset-passwd',
    path: '/reset-passwd',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(auth)/reset-passwd.lazy').then((d) => d.Route))

const authLoginRoute = authLoginImport
  .update({
    id: '/(auth)/login',
    path: '/login',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(auth)/login.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/reset-passwd': {
      id: '/(auth)/reset-passwd'
      path: '/reset-passwd'
      fullPath: '/reset-passwd'
      preLoaderRoute: typeof authResetPasswdLazyImport
      parentRoute: typeof rootRoute
    }
    '/address-book/': {
      id: '/address-book/'
      path: '/address-book'
      fullPath: '/address-book'
      preLoaderRoute: typeof AddressBookIndexImport
      parentRoute: typeof rootRoute
    }
    '/data-dashboard/': {
      id: '/data-dashboard/'
      path: '/data-dashboard'
      fullPath: '/data-dashboard'
      preLoaderRoute: typeof DataDashboardIndexImport
      parentRoute: typeof rootRoute
    }
    '/financial-info/': {
      id: '/financial-info/'
      path: '/financial-info'
      fullPath: '/financial-info'
      preLoaderRoute: typeof FinancialInfoIndexImport
      parentRoute: typeof rootRoute
    }
    '/order-mgt/': {
      id: '/order-mgt/'
      path: '/order-mgt'
      fullPath: '/order-mgt'
      preLoaderRoute: typeof OrderMgtIndexImport
      parentRoute: typeof rootRoute
    }
    '/waybill-tracking/': {
      id: '/waybill-tracking/'
      path: '/waybill-tracking'
      fullPath: '/waybill-tracking'
      preLoaderRoute: typeof WaybillTrackingIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/login': typeof authLoginRoute
  '/reset-passwd': typeof authResetPasswdLazyRoute
  '/address-book': typeof AddressBookIndexRoute
  '/data-dashboard': typeof DataDashboardIndexRoute
  '/financial-info': typeof FinancialInfoIndexRoute
  '/order-mgt': typeof OrderMgtIndexRoute
  '/waybill-tracking': typeof WaybillTrackingIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/login': typeof authLoginRoute
  '/reset-passwd': typeof authResetPasswdLazyRoute
  '/address-book': typeof AddressBookIndexRoute
  '/data-dashboard': typeof DataDashboardIndexRoute
  '/financial-info': typeof FinancialInfoIndexRoute
  '/order-mgt': typeof OrderMgtIndexRoute
  '/waybill-tracking': typeof WaybillTrackingIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/(auth)/login': typeof authLoginRoute
  '/(auth)/reset-passwd': typeof authResetPasswdLazyRoute
  '/address-book/': typeof AddressBookIndexRoute
  '/data-dashboard/': typeof DataDashboardIndexRoute
  '/financial-info/': typeof FinancialInfoIndexRoute
  '/order-mgt/': typeof OrderMgtIndexRoute
  '/waybill-tracking/': typeof WaybillTrackingIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/reset-passwd'
    | '/address-book'
    | '/data-dashboard'
    | '/financial-info'
    | '/order-mgt'
    | '/waybill-tracking'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/reset-passwd'
    | '/address-book'
    | '/data-dashboard'
    | '/financial-info'
    | '/order-mgt'
    | '/waybill-tracking'
  id:
    | '__root__'
    | '/'
    | '/(auth)/login'
    | '/(auth)/reset-passwd'
    | '/address-book/'
    | '/data-dashboard/'
    | '/financial-info/'
    | '/order-mgt/'
    | '/waybill-tracking/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  authLoginRoute: typeof authLoginRoute
  authResetPasswdLazyRoute: typeof authResetPasswdLazyRoute
  AddressBookIndexRoute: typeof AddressBookIndexRoute
  DataDashboardIndexRoute: typeof DataDashboardIndexRoute
  FinancialInfoIndexRoute: typeof FinancialInfoIndexRoute
  OrderMgtIndexRoute: typeof OrderMgtIndexRoute
  WaybillTrackingIndexRoute: typeof WaybillTrackingIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  authLoginRoute: authLoginRoute,
  authResetPasswdLazyRoute: authResetPasswdLazyRoute,
  AddressBookIndexRoute: AddressBookIndexRoute,
  DataDashboardIndexRoute: DataDashboardIndexRoute,
  FinancialInfoIndexRoute: FinancialInfoIndexRoute,
  OrderMgtIndexRoute: OrderMgtIndexRoute,
  WaybillTrackingIndexRoute: WaybillTrackingIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/(auth)/login",
        "/(auth)/reset-passwd",
        "/address-book/",
        "/data-dashboard/",
        "/financial-info/",
        "/order-mgt/",
        "/waybill-tracking/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/(auth)/login": {
      "filePath": "(auth)/login.tsx"
    },
    "/(auth)/reset-passwd": {
      "filePath": "(auth)/reset-passwd.lazy.tsx"
    },
    "/address-book/": {
      "filePath": "address-book/index.tsx"
    },
    "/data-dashboard/": {
      "filePath": "data-dashboard/index.tsx"
    },
    "/financial-info/": {
      "filePath": "financial-info/index.tsx"
    },
    "/order-mgt/": {
      "filePath": "order-mgt/index.tsx"
    },
    "/waybill-tracking/": {
      "filePath": "waybill-tracking/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
